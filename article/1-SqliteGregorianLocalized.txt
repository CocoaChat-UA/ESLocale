Учим  SQLite работать с локализированным календарем

<SQLite logo> + <iCal>
---------

Недавно мне довелось портировать (точнее, переписывать) под iOS приложение для анализа посещаемости сайта. Поскольку данные подходили под реляционную модель, мы решили использовать SQLite. Насколько я знаю, других реляционных СУБД под iOS просто нет.

Долго ли, коротко ли… Пришло время подсчитать понедельный КПД для определенного диапазона дат.

Итак, имеем таблицу, которая содержит значения полезной и затраченной работы, а также даты исполнения оной работы. Структура таблица описывается на языке SQL следующим образом : 
CREATE TABLE [Usage] 
( 
   [FacetId] VARCHAR, -- "исполнитель"
   [Value  ] INTEGER, -- полезная "работа"
   [Visits ] INTEGER, -- затраченная "работа"
   [Date   ] DATETIME -- дата  
);

Необходимо для некоторого диапазона дат посчитать КПД для каждой недели. Ладно, написали запрос 

SELECT SUM( Value ) / SUM( Visits ),
	   strftime( '%Y-%W', Date ) AS week
FROM  Usage
WHERE Date BETWEEN @startDate AND @endDate
GROUP BY week
ORDER BY week;


Однако результаты почему-то не сошлись с эталонной реализацией. Выяснилось следующее. SQLite считает что неделя начинается с понедельника. В то время как эталонная реализация считает началом недели воскресенье как это принято в США.
sqlite> SELECT strftime( '%Y-%W', '2011-01-02' );
2011-01
sqlite> SELECT strftime( '%Y-%W', '2011-01-01' );
2011-00

Способа принудительно указать СУБД локаль я не нашел. Разбивать красивый запрос на несколько очень не хотелось. К тому же, я обнаружил возможность добавлять функции в SQLite с помощью sqlite3_create_function. 
Да, я решил написать свой вариант форматирования дат с преферансом и куртизанками. От strftime он будет отличаться умением учитывать переданную из запроса локаль. 


Выгоды такого решения очевидны :
* мы остаемся в рамках SQL
* не нужно писать лишние циклы на Objective-C
* мы получим потенциально более быстрое исполнение запросов
*** И самое главное - это решение рассчитано на повторное использование.


Итак, приступим. Заранее оговорю предположение что мы находимся в рамках григорианского календаря.

Функция-расширение SQLite имеет сигнатуру, подобную функции main(). Отличие состоит в том что она не имеет флага фозврата. Вместо этого в нее передается контекст базы данных, из которой она была вызвана.

void ObjcFormatAnsiDateUsingLocale( sqlite3_context* ctx_,int argc_,sqlite3_value** argv_ );

















